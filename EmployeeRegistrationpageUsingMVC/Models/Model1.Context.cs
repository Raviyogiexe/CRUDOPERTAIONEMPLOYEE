//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace EmployeeRegistrationpageUsingMVC.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class dbEmployeeEntities : DbContext
    {
        public dbEmployeeEntities()
            : base("name=dbEmployeeEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Employeedata> Employeedatas { get; set; }
        public virtual DbSet<tblstate> tblstates { get; set; }
        public virtual DbSet<tblHoby> tblHobies { get; set; }
    
        public virtual ObjectResult<showalldata_Result> showalldata()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<showalldata_Result>("showalldata");
        }
    
        public virtual ObjectResult<insertaempdataproc_Result> insertaempdataproc(string empname, Nullable<System.DateTime> dob, string gender, string address, Nullable<int> state, ObjectParameter idno)
        {
            var empnameParameter = empname != null ?
                new ObjectParameter("empname", empname) :
                new ObjectParameter("empname", typeof(string));
    
            var dobParameter = dob.HasValue ?
                new ObjectParameter("dob", dob) :
                new ObjectParameter("dob", typeof(System.DateTime));
    
            var genderParameter = gender != null ?
                new ObjectParameter("gender", gender) :
                new ObjectParameter("gender", typeof(string));
    
            var addressParameter = address != null ?
                new ObjectParameter("address", address) :
                new ObjectParameter("address", typeof(string));
    
            var stateParameter = state.HasValue ?
                new ObjectParameter("state", state) :
                new ObjectParameter("state", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<insertaempdataproc_Result>("insertaempdataproc", empnameParameter, dobParameter, genderParameter, addressParameter, stateParameter, idno);
        }
    }
}
